{"ast":null,"code":"var _jsxFileName = \"/Users/shaghayeghzarei/Documents/School/Semester 6/Fullstack/101274382_lab_test1_chatapp/101274382_lab_test1_chatapp/frontend/src/screens/chat.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const backend = \"http://localhost:8089\";\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [typing, setTyping] = useState(\"\");\n  const [groupData, setGroupData] = useState({});\n  const socket = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n    const user = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n    if (token) {\n      // Check if the token exists\n      socket.current = io(backend, {\n        auth: {\n          token: token // Pass the token in the headers for authentication\n        }\n      });\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`${backend}/group/${groupId}/messages`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n            }\n          });\n          if (response.status === 200) {\n            const data = response.data;\n            const mymsg = data.map(msg => {\n              return {\n                message: msg.message,\n                sender: msg.sender.username\n              };\n            });\n            setMessages(mymsg);\n          } else {\n            console.error(\"Failed to fetch messages\");\n          }\n          const groupName = await axios.get(`${backend}/group/${groupId}`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n            }\n          });\n          if (groupName.status === 200) {\n            const groupNameData = groupName;\n            setGroupData(groupNameData);\n          }\n        } catch (error) {\n          console.error(\"Error fetching messages:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n\n      // Listen for new messages\n      socket.current.on(\"message\", newMessage => {\n        console.log(\"New message:\", newMessage);\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n\n      // Listen for typing\n      socket.current.on(\"type\", user => {\n        // console.log(\"Typing:\", user);\n        setTyping(user, \" is typing ...\");\n      });\n      socket.current.on(\"stopTyping\", () => {\n        setTyping(\"\");\n      });\n\n      // Cleanup on component unmount\n      return () => {\n        socket.current.disconnect();\n      };\n    }\n  }, [groupId, backend]);\n  useEffect(() => {\n    if (!groupData || !groupData.data) return;\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n    console.log(\"Joining room:\", groupData.data.name);\n    socket.current.emit(\"joinRoom\", {\n      username: username,\n      userId: userId,\n      room: groupData.data.name,\n      groupId: groupId,\n      token: localStorage.getItem(\"token\")\n    });\n  }, [groupData]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n    const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n    if (token) {\n      // Check if the token exists\n      try {\n        console.log(\"Sending message:\", newMessage);\n        socket.current.emit(\"chatMessage\", {\n          message: newMessage,\n          sender: userId,\n          group: groupId\n        }, groupData.data.name, username);\n        setNewMessage(\"\");\n        setTyping(\"\");\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    }\n  };\n  const handleChange = e => {\n    const message = e.target.value;\n    setNewMessage(message);\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    socket.current.emit(`typing`, {\n      room: groupData.data.name,\n      username: username\n    }); // Emit typing event with the username\n\n    if (message === \"\") {\n      socket.current.emit(`stopTyping`, {\n        room: groupData.data.name\n      }); // Emit stopTyping event\n    }\n  };\n\n  // user leaves the room upadte the database\n  const handleLeaveRoom = async () => {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n    const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n    try {\n      const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n      socket.current.emit(\"leaveRoom\", {\n        user: userId,\n        username: username,\n        groupId: groupId,\n        name: groupData.data.name\n      });\n      console.log(\"Left the room\");\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Error leaving the room:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 min-h-screen text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between px-6 py-4 bg-gray-800 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveRoom,\n          className: \"bg-red-600 hover:bg-red-500 px-4 py-2 rounded-lg text-white\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          className: \"bg-gray-600 hover:bg-gray-500 px-4 py-2 rounded-lg text-white\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-6 flex flex-col gap-8\",\n      children: [typing && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 text-sm\",\n        children: typing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 rounded-lg shadow-lg overflow-y-auto h-96\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 text-center\",\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this) : messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 70\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 text-center\",\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex gap-2\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: handleChange,\n          placeholder: \"Type here...\",\n          className: \"flex-1 p-2 text-black rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 hover:bg-blue-500 px-4 py-2 rounded-lg text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"t7rqmOfe4WTgqnbnFfoKH4wMmsw=\", true);\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Chat","_s","groupId","useParams","backend","messages","setMessages","useState","loading","setLoading","newMessage","setNewMessage","typing","setTyping","groupData","setGroupData","socket","useRef","navigate","useNavigate","useEffect","token","localStorage","getItem","user","current","io","auth","fetchData","response","axios","get","headers","status","data","mymsg","map","msg","message","sender","username","console","error","groupName","groupNameData","on","log","prevMessages","disconnect","userId","name","emit","room","handleSendMessage","e","preventDefault","group","handleChange","target","value","handleLeaveRoom","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Link","to","length","index","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/shaghayeghzarei/Documents/School/Semester 6/Fullstack/101274382_lab_test1_chatapp/101274382_lab_test1_chatapp/frontend/src/screens/chat.jsx"],"sourcesContent":["\n\nexport default function Chat() {\n    const { groupId } = useParams(); \n    const backend = \"http://localhost:8089\";\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [typing, setTyping] = useState(\"\");\n    const [groupData, setGroupData] = useState({});\n    const socket = useRef(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n        const user = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n        if (token) { // Check if the token exists\n            socket.current = io(backend, {\n                auth: {\n                    token: token, // Pass the token in the headers for authentication\n                },\n            });\n\n            const fetchData = async () => {\n                try {\n                    const response = await axios.get(`${backend}/group/${groupId}/messages`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n                        }\n                    });\n\n                    if (response.status === 200) {\n                        const data = response.data;\n                        const mymsg = data.map((msg) => { return { message: msg.message, sender: msg.sender.username } });\n                        setMessages(mymsg);\n                    } else {\n                        console.error(\"Failed to fetch messages\");\n                    }\n                    const groupName = await axios.get(`${backend}/group/${groupId}`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n                        }\n                    });\n\n                    if (groupName.status === 200) {\n                        const groupNameData = groupName;\n                        setGroupData(groupNameData);\n                    }\n\n                } catch (error) {\n                    console.error(\"Error fetching messages:\", error);\n                } finally {\n                    setLoading(false);\n                }\n            };\n\n            fetchData();\n\n            // Listen for new messages\n            socket.current.on(\"message\", (newMessage) => {\n                console.log(\"New message:\", newMessage);\n                setMessages((prevMessages) => [...prevMessages, newMessage]);\n            });\n\n            // Listen for typing\n            socket.current.on(\"type\", (user) => {\n                // console.log(\"Typing:\", user);\n                setTyping(user, \" is typing ...\");\n            });\n\n            socket.current.on(\"stopTyping\", () => {\n                setTyping(\"\");\n            });\n\n            // Cleanup on component unmount\n            return () => {\n                socket.current.disconnect();\n            };\n        }\n    }, [groupId, backend]);\n\n    useEffect(() => {\n\n        if(!groupData || !groupData.data) return;\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n        const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n        console.log(\"Joining room:\", groupData.data.name);\n        socket.current.emit(\"joinRoom\", { username: username, userId: userId, room: groupData.data.name, groupId: groupId, token: localStorage.getItem(\"token\")});\n\n    }, [groupData]);\n    \n\n    const handleSendMessage = async (e) => {\n        e.preventDefault();\n\n        const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n        const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    \n\n        if (token) { // Check if the token exists\n            try {\n                console.log(\"Sending message:\", newMessage);\n                socket.current.emit(\"chatMessage\",\n                    { message: newMessage, sender: userId, group: groupId }, groupData.data.name, username);\n                setNewMessage(\"\");\n                setTyping(\"\");\n\n            } catch (error) {\n                console.error(\"Error sending message:\", error);\n            }\n        }\n    };\n\n\n    const handleChange = (e) => {\n        const message = e.target.value;\n        setNewMessage(message);\n\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n        socket.current.emit(`typing`, { room: groupData.data.name, username: username}); // Emit typing event with the username\n\n        if (message === \"\") {\n            socket.current.emit(`stopTyping`, { room: groupData.data.name }); // Emit stopTyping event\n        }\n    };\n\n    // user leaves the room upadte the database\n    const handleLeaveRoom = async () => {\n        const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n        const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n        try {\n    \n            const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n            socket.current.emit(\"leaveRoom\", { user: userId, username: username, groupId: groupId, name: groupData.data.name });\n\n            console.log(\"Left the room\");\n            navigate(\"/dashboard\");\n\n        } catch (error) {\n            console.error(\"Error leaving the room:\", error);\n        }\n    };\n\n    return (\n        <div className=\"bg-gray-900 min-h-screen text-white\">\n            <div className=\"flex items-center justify-between px-6 py-4 bg-gray-800 shadow-md\">\n                <h1 className=\"text-3xl font-semibold\">Chat</h1>\n                <div className=\"space-x-4\">\n                    <button onClick={handleLeaveRoom} className=\"bg-red-600 hover:bg-red-500 px-4 py-2 rounded-lg text-white\">Leave</button>\n                    <Link to=\"/dashboard\" className=\"bg-gray-600 hover:bg-gray-500 px-4 py-2 rounded-lg text-white\">Back</Link>\n                </div>\n            </div>\n            <div className=\"container mx-auto p-6 flex flex-col gap-8\">\n                {typing && <p className=\"text-gray-400 text-sm\">{typing}</p>}\n                <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg overflow-y-auto h-96\">\n                    {loading ? (\n                        <p className=\"text-gray-400 text-center\">Loading messages...</p>\n                    ) : messages.length > 0 ? (\n                        messages.map((msg, index) => (\n                            <p key={index} className=\"text-gray-300\"><strong>{msg.sender}:</strong> {msg.message}</p>\n                        ))\n                    ) : (\n                        <p className=\"text-gray-400 text-center\">No messages yet</p>\n                    )}\n                </div>\n                <form className=\"flex gap-2\" onSubmit={handleSendMessage}>\n                    <input type=\"text\" value={newMessage} onChange={handleChange} placeholder=\"Type here...\" className=\"flex-1 p-2 text-black rounded-lg\" />\n                    <button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-500 px-4 py-2 rounded-lg text-white\">Send</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}