{"ast":null,"code":"useEffect(() => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    socket.current = io(backend, {\n      auth: {\n        token\n      }\n    });\n    const fetchData = async () => {\n      try {\n        // Fetch messages\n        const messageResponse = await axios.get(`${backend}/group/${groupId}/messages`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (messageResponse.status === 200) {\n          setMessages(messageResponse.data.map(msg => ({\n            message: msg.message,\n            username: msg.sender.username,\n            time: moment(msg.createdAt).format(\"hh:mm A\")\n          })));\n        }\n\n        // Fetch group details\n        const groupResponse = await axios.get(`${backend}/group/${groupId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (groupResponse.status === 200) {\n          setGroupData(groupResponse.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    socket.current.on(\"message\", newMessage => {\n      newMessage.time = moment(newMessage.createdAt).format(\"hh:mm A\");\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => socket.current.disconnect();\n  }\n}, [groupId]);","map":{"version":3,"names":["useEffect","token","localStorage","getItem","socket","current","io","backend","auth","fetchData","messageResponse","axios","get","groupId","headers","Authorization","status","setMessages","data","map","msg","message","username","sender","time","moment","createdAt","format","groupResponse","setGroupData","error","console","setLoading","on","newMessage","prevMessages","disconnect"],"sources":["/Users/shaghayeghzarei/Documents/School/Semester 6/Fullstack/101274382_lab_test1_chatapp/101274382_lab_test1_chatapp/frontend/src/screens/chat.jsx"],"sourcesContent":["useEffect(() => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    socket.current = io(backend, { auth: { token } });\n\n    const fetchData = async () => {\n      try {\n        // Fetch messages\n        const messageResponse = await axios.get(`${backend}/group/${groupId}/messages`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (messageResponse.status === 200) {\n          setMessages(messageResponse.data.map((msg) => ({\n            message: msg.message,\n            username: msg.sender.username,\n            time: moment(msg.createdAt).format(\"hh:mm A\"),\n          })));\n        }\n\n        // Fetch group details\n        const groupResponse = await axios.get(`${backend}/group/${groupId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        if (groupResponse.status === 200) {\n          setGroupData(groupResponse.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n\n    socket.current.on(\"message\", (newMessage) => {\n      newMessage.time = moment(newMessage.createdAt).format(\"hh:mm A\");\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n    });\n\n    return () => socket.current.disconnect();\n  }\n}, [groupId]);\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTG,MAAM,CAACC,OAAO,GAAGC,EAAE,CAACC,OAAO,EAAE;MAAEC,IAAI,EAAE;QAAEP;MAAM;IAAE,CAAC,CAAC;IAEjD,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,GAAEL,OAAQ,UAASM,OAAQ,WAAU,EAAE;UAC9EC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASd,KAAM;UACjC;QACF,CAAC,CAAC;QAEF,IAAIS,eAAe,CAACM,MAAM,KAAK,GAAG,EAAE;UAClCC,WAAW,CAACP,eAAe,CAACQ,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;YAC7CC,OAAO,EAAED,GAAG,CAACC,OAAO;YACpBC,QAAQ,EAAEF,GAAG,CAACG,MAAM,CAACD,QAAQ;YAC7BE,IAAI,EAAEC,MAAM,CAACL,GAAG,CAACM,SAAS,CAAC,CAACC,MAAM,CAAC,SAAS;UAC9C,CAAC,CAAC,CAAC,CAAC;QACN;;QAEA;QACA,MAAMC,aAAa,GAAG,MAAMjB,KAAK,CAACC,GAAG,CAAE,GAAEL,OAAQ,UAASM,OAAQ,EAAC,EAAE;UACnEC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASd,KAAM;UAAE;QAC9C,CAAC,CAAC;QAEF,IAAI2B,aAAa,CAACZ,MAAM,KAAK,GAAG,EAAE;UAChCa,YAAY,CAACD,aAAa,CAACV,IAAI,CAAC;QAClC;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDvB,SAAS,CAAC,CAAC;IAEXL,MAAM,CAACC,OAAO,CAAC4B,EAAE,CAAC,SAAS,EAAGC,UAAU,IAAK;MAC3CA,UAAU,CAACV,IAAI,GAAGC,MAAM,CAACS,UAAU,CAACR,SAAS,CAAC,CAACC,MAAM,CAAC,SAAS,CAAC;MAChEV,WAAW,CAAEkB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF,OAAO,MAAM9B,MAAM,CAACC,OAAO,CAAC+B,UAAU,CAAC,CAAC;EAC1C;AACF,CAAC,EAAE,CAACvB,OAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}