{"ast":null,"code":"var _jsxFileName = \"/Users/shaghayeghzarei/Documents/School/Semester 6/Fullstack/101274382_lab_test1_chatapp/101274382_lab_test1_chatapp/frontend/src/screens/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const backend = \"http://127.0.0.1:5100\";\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [typing, setTyping] = useState(\"\");\n  const [groupData, setGroupData] = useState({});\n  const socket = useRef(null);\n  const navigate = useNavigate();\n  const currentUser = localStorage.getItem(\"username\");\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n    const user = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n    if (token) {\n      // Check if the token exists\n      socket.current = io(backend, {\n        auth: {\n          token: token // Pass the token in the headers for authentication\n        }\n      });\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`${backend}/group/${groupId}/messages`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n            }\n          });\n          if (response.status === 200) {\n            const data = response.data;\n            const mymsg = data.map(msg => {\n              return {\n                message: msg.message,\n                sender: msg.sender.username\n              };\n            });\n            setMessages(mymsg);\n          } else {\n            console.error(\"Failed to fetch messages\");\n          }\n          const groupName = await axios.get(`${backend}/group/${groupId}`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n            }\n          });\n          if (groupName.status === 200) {\n            const groupNameData = groupName;\n            setGroupData(groupNameData);\n          }\n        } catch (error) {\n          console.error(\"Error fetching messages:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n\n      // Listen for new messages\n      socket.current.on(\"message\", newMessage => {\n        console.log(\"New message:\", newMessage);\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n\n      // Listen for typing\n      socket.current.on(\"type\", user => {\n        // console.log(\"Typing:\", user);\n        setTyping(user, \" is typing ...\");\n      });\n      socket.current.on(\"stopTyping\", () => {\n        setTyping(\"\");\n      });\n\n      // Cleanup on component unmount\n      return () => {\n        socket.current.disconnect();\n      };\n    }\n  }, [groupId, backend]);\n  useEffect(() => {\n    if (!groupData || !groupData.data) return;\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n    console.log(\"Joining room:\", groupData.data.name);\n    socket.current.emit(\"joinRoom\", {\n      username: username,\n      userId: userId,\n      room: groupData.data.name,\n      groupId: groupId,\n      token: localStorage.getItem(\"token\")\n    });\n  }, [groupData]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n    const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n    if (token) {\n      // Check if the token exists\n      try {\n        console.log(\"Sending message:\", newMessage);\n        socket.current.emit(\"chatMessage\", {\n          message: newMessage,\n          sender: userId,\n          group: groupId\n        }, groupData.data.name, username);\n        setNewMessage(\"\");\n        setTyping(\"\");\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    }\n  };\n  const handleChange = e => {\n    const message = e.target.value;\n    setNewMessage(message);\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    socket.current.emit(`typing`, {\n      room: groupData.data.name,\n      username: username\n    }); // Emit typing event with the username\n\n    if (message === \"\") {\n      socket.current.emit(`stopTyping`, {\n        room: groupData.data.name\n      }); // Emit stopTyping event\n    }\n  };\n\n  // user leaves the room upadte the database\n  const handleLeaveRoom = async () => {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n    const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n    try {\n      const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n      socket.current.emit(\"leaveRoom\", {\n        user: userId,\n        username: username,\n        groupId: groupId,\n        name: groupData.data.name\n      });\n      console.log(\"Left the room\");\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Error leaving the room:\", error);\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      socket.current = io(backend, {\n        auth: {\n          token\n        }\n      });\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`${backend}/group/${groupId}/messages`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.status === 200) {\n            setMessages(response.data.map(msg => ({\n              message: msg.message,\n              username: msg.sender.username,\n              time: moment(msg.createdAt).format(\"hh:mm A\")\n            })));\n          }\n        } catch (error) {\n          console.error(\"Error fetching messages:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n      socket.current.on(\"message\", newMessage => {\n        newMessage.time = moment(newMessage.createdAt).format(\"hh:mm A\");\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n      socket.current.on(\"type\", user => setTyping(`${user} is typing...`));\n      socket.current.on(\"stopTyping\", () => setTyping(\"\"));\n      return () => socket.current.disconnect();\n    }\n  }, [groupId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 min-h-screen flex flex-col items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(-1),\n          className: \"text-gray-400 hover:text-white\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold text-white\",\n          children: \"Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          className: \"text-red-400 hover:underline\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-300 mb-2\",\n        children: typing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto max-h-[500px] space-y-3 p-2 bg-gray-700 rounded-lg\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400 text-center\",\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this) : messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.username === currentUser ? \"justify-end\" : \"justify-start\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 rounded-lg max-w-xs break-words ${msg.username === currentUser ? \"bg-blue-600 text-white\" : \"bg-gray-300 text-black\"}`,\n            children: [msg.username !== currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs font-semibold text-gray-700\",\n              children: msg.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-1 text-right\",\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400 text-center\",\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"mt-4 flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          className: \"flex-1 p-2 rounded-lg border-none focus:outline-none text-black\",\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"fL1oVNxPxbsugq4GmbuuAIXDAhc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","useNavigate","useParams","axios","io","jsxDEV","_jsxDEV","Chat","_s","groupId","backend","messages","setMessages","loading","setLoading","newMessage","setNewMessage","typing","setTyping","groupData","setGroupData","socket","navigate","currentUser","localStorage","getItem","token","user","current","auth","fetchData","response","get","headers","status","data","mymsg","map","msg","message","sender","username","console","error","groupName","groupNameData","on","log","prevMessages","disconnect","userId","name","emit","room","handleSendMessage","e","preventDefault","group","handleChange","target","value","handleLeaveRoom","Authorization","time","moment","createdAt","format","className","children","onClick","ArrowLeft","size","fileName","_jsxFileName","lineNumber","columnNumber","to","length","index","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/shaghayeghzarei/Documents/School/Semester 6/Fullstack/101274382_lab_test1_chatapp/101274382_lab_test1_chatapp/frontend/src/screens/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useNavigate, useParams  } from \"react-router-dom\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\n\n\nexport default function Chat() {\n    const { groupId } = useParams(); \n    const backend = \"http://127.0.0.1:5100\";\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [typing, setTyping] = useState(\"\");\n    const [groupData, setGroupData] = useState({});\n    const socket = useRef(null);\n    const navigate = useNavigate();\n    const currentUser = localStorage.getItem(\"username\");\n            \n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n        const user = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n        if (token) { // Check if the token exists\n            socket.current = io(backend, {\n                auth: {\n                    token: token, // Pass the token in the headers for authentication\n                },\n            });\n\n            const fetchData = async () => {\n                try {\n                    const response = await axios.get(`${backend}/group/${groupId}/messages`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n                        }\n                    });\n\n                    if (response.status === 200) {\n                        const data = response.data;\n                        const mymsg = data.map((msg) => { return { message: msg.message, sender: msg.sender.username } });\n                        setMessages(mymsg);\n                    } else {\n                        console.error(\"Failed to fetch messages\");\n                    }\n                    const groupName = await axios.get(`${backend}/group/${groupId}`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": `Bearer ${token}` // Include the token in the request headers\n                        }\n                    });\n\n                    if (groupName.status === 200) {\n                        const groupNameData = groupName;\n                        setGroupData(groupNameData);\n                    }\n\n                } catch (error) {\n                    console.error(\"Error fetching messages:\", error);\n                } finally {\n                    setLoading(false);\n                }\n            };\n\n            fetchData();\n\n            // Listen for new messages\n            socket.current.on(\"message\", (newMessage) => {\n                console.log(\"New message:\", newMessage);\n                setMessages((prevMessages) => [...prevMessages, newMessage]);\n            });\n\n            // Listen for typing\n            socket.current.on(\"type\", (user) => {\n                // console.log(\"Typing:\", user);\n                setTyping(user, \" is typing ...\");\n            });\n\n            socket.current.on(\"stopTyping\", () => {\n                setTyping(\"\");\n            });\n\n            // Cleanup on component unmount\n            return () => {\n                socket.current.disconnect();\n            };\n        }\n    }, [groupId, backend]);\n\n    useEffect(() => {\n\n        if(!groupData || !groupData.data) return;\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n        const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n        console.log(\"Joining room:\", groupData.data.name);\n        socket.current.emit(\"joinRoom\", { username: username, userId: userId, room: groupData.data.name, groupId: groupId, token: localStorage.getItem(\"token\")});\n\n    }, [groupData]);\n    \n\n    const handleSendMessage = async (e) => {\n        e.preventDefault();\n\n        const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n        const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n\n      \n\n        if (token) { // Check if the token exists\n            try {\n                console.log(\"Sending message:\", newMessage);\n                socket.current.emit(\"chatMessage\",\n                    { message: newMessage, sender: userId, group: groupId }, groupData.data.name, username);\n                setNewMessage(\"\");\n                setTyping(\"\");\n\n            } catch (error) {\n                console.error(\"Error sending message:\", error);\n            }\n        }\n    };\n\n\n    const handleChange = (e) => {\n        const message = e.target.value;\n        setNewMessage(message);\n\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n        socket.current.emit(`typing`, { room: groupData.data.name, username: username}); // Emit typing event with the username\n\n        if (message === \"\") {\n            socket.current.emit(`stopTyping`, { room: groupData.data.name }); // Emit stopTyping event\n        }\n    };\n\n    // user leaves the room upadte the database\n    const handleLeaveRoom = async () => {\n        const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n        const userId = localStorage.getItem(\"id\"); // Retrieve the userId from localStorage\n        try {\n    \n            const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n            socket.current.emit(\"leaveRoom\", { user: userId, username: username, groupId: groupId, name: groupData.data.name });\n\n            console.log(\"Left the room\");\n            navigate(\"/dashboard\");\n\n        } catch (error) {\n            console.error(\"Error leaving the room:\", error);\n        }\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n          socket.current = io(backend, {\n            auth: { token },\n          });\n    \n          const fetchData = async () => {\n            try {\n              const response = await axios.get(`${backend}/group/${groupId}/messages`, {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: `Bearer ${token}`,\n                },\n              });\n              if (response.status === 200) {\n                setMessages(response.data.map((msg) => ({ \n                  message: msg.message, \n                  username: msg.sender.username, \n                  time: moment(msg.createdAt).format(\"hh:mm A\") \n                })));\n              }\n            } catch (error) {\n              console.error(\"Error fetching messages:\", error);\n            } finally {\n              setLoading(false);\n            }\n          };\n          fetchData();\n    \n          socket.current.on(\"message\", (newMessage) => {\n            newMessage.time = moment(newMessage.createdAt).format(\"hh:mm A\");\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n          });\n          socket.current.on(\"type\", (user) => setTyping(`${user} is typing...`));\n          socket.current.on(\"stopTyping\", () => setTyping(\"\"));\n    \n          return () => socket.current.disconnect();\n        }\n      }, [groupId]);\n    \n      return (\n        <div className=\"bg-gray-900 min-h-screen flex flex-col items-center justify-center p-4\">\n          <div className=\"w-full max-w-2xl bg-gray-800 p-6 rounded-lg shadow-lg\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <button onClick={() => navigate(-1)} className=\"text-gray-400 hover:text-white\">\n                <ArrowLeft size={24} />\n              </button>\n              <h1 className=\"text-xl font-bold text-white\">Group Chat</h1>\n              <Link to=\"/dashboard\" className=\"text-red-400 hover:underline\">Leave</Link>\n            </div>\n            {typing && <div className=\"text-sm text-gray-300 mb-2\">{typing}</div>}\n            <div className=\"overflow-y-auto max-h-[500px] space-y-3 p-2 bg-gray-700 rounded-lg\">\n              {loading ? (\n                <div className=\"text-gray-400 text-center\">Loading messages...</div>\n              ) : messages.length > 0 ? (\n                messages.map((msg, index) => (\n                  <div\n                    key={index}\n                    className={`flex ${msg.username === currentUser ? \"justify-end\" : \"justify-start\"}`}\n                  >\n                    <div className={`p-3 rounded-lg max-w-xs break-words ${msg.username === currentUser ? \"bg-blue-600 text-white\" : \"bg-gray-300 text-black\"}`}>\n                      {msg.username !== currentUser && <div className=\"text-xs font-semibold text-gray-700\">{msg.username}</div>}\n                      <div className=\"text-sm\">{msg.message}</div>\n                      <div className=\"text-xs text-gray-500 mt-1 text-right\">{msg.time}</div>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"text-gray-400 text-center\">No messages yet</div>\n              )}\n            </div>\n            <form onSubmit={handleSendMessage} className=\"mt-4 flex gap-2\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                className=\"flex-1 p-2 rounded-lg border-none focus:outline-none text-black\"\n                placeholder=\"Type a message...\"\n              />\n              <button type=\"submit\" className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700\">Send</button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}